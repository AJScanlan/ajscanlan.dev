---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import { formatReadingTime } from "@/utils/reading-time";
import { getReadingTime } from "@/utils/get-reading-time";

const posts = (await getCollection(
	"thoughts",
	({ data }) => data.status === "published",
))
	.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
	.slice(0, 8);

// Pre-calculate reading times for all posts
const postsWithReadingTime = await Promise.all(
	posts.map(async (post) => ({
		post,
		readingTime: await getReadingTime(post),
	}))
);
---

<BaseLayout
	title="ajscanlan.dev"
	description="Writing my way to understanding."
>
	<section class="mb-12">
		<h1 class="text-3xl font-semibold tracking-tight mb-3">
			Writing my way to understanding
		</h1>
		<p class="text-ink-600 dark:text-ink-400 max-w-prose">
			Short, sincere, approachable reflections — clarity over flair.
			Occasionally technical, often humane.
		</p>
	</section>

	<section>
		<h2 class="text-xl font-semibold mb-4">Latest posts</h2>
		<ul class="space-y-5">
			{
				postsWithReadingTime.map(({ post, readingTime }) => (
					<li>
						<a href={`/posts/${post.slug}/`} class="block">
							<h3 class="text-lg font-medium hover:underline">
								{post.data.title}
							</h3>
							{post.data.dek && (
								<p class="text-sm text-ink-600 dark:text-ink-400">
									{post.data.dek}
								</p>
							)}
							<time class="text-xs text-ink-500">
								{new Date(post.data.date).toLocaleDateString(
									"en-IE",
									{
										year: "numeric",
										month: "short",
										day: "2-digit",
									},
								)}
								{" "}· {formatReadingTime(readingTime)}
							</time>
						</a>
					</li>
				))
			}
		</ul>
	</section>
</BaseLayout>
